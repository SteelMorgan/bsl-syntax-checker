# –°–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ MCP BSL Server –≤ Cursor IDE
# –ê–≤—Ç–æ—Ä: AI Assistant
# –î–∞—Ç–∞: 2025-10-25

param(
    [string]$ProjectPath = "D:\My Projects\Projects 1C",
    [string]$ContainerName = "mcp-bsl-server-checker",
    [switch]$SkipBuild,
    [switch]$SkipContainer,
    [switch]$SkipConfig
)

Write-Host "üéØ –ù–ê–°–¢–†–û–ô–ö–ê MCP BSL SERVER –î–õ–Ø CURSOR IDE" -ForegroundColor Green
Write-Host "================================================" -ForegroundColor Green

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker
Write-Host "`nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker..." -ForegroundColor Cyan
try {
    $dockerVersion = docker --version
    Write-Host "‚úÖ Docker –Ω–∞–π–¥–µ–Ω: $dockerVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Docker –Ω–µ –Ω–∞–π–¥–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop" -ForegroundColor Red
    exit 1
}

# –®–∞–≥ 1: –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞
if (-not $SkipBuild) {
    Write-Host "`nüî® –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞..." -ForegroundColor Cyan
    try {
        docker build -t mcp-bsl-server:latest .
        Write-Host "‚úÖ Docker –æ–±—Ä–∞–∑ —Å–æ–±—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ" -ForegroundColor Green
    } catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ Docker –æ–±—Ä–∞–∑–∞" -ForegroundColor Red
        exit 1
    }
} else {
    Write-Host "`n‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫ —Å–±–æ—Ä–∫–∏ Docker –æ–±—Ä–∞–∑–∞" -ForegroundColor Yellow
}

# –®–∞–≥ 2: –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
Write-Host "`nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..." -ForegroundColor Cyan
try {
    docker stop $ContainerName 2>$null
    Write-Host "‚úÖ –°—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Green
} catch {
    Write-Host "‚ÑπÔ∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –±—ã–ª –∑–∞–ø—É—â–µ–Ω" -ForegroundColor Yellow
}

# –®–∞–≥ 3: –ó–∞–ø—É—Å–∫ –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
if (-not $SkipContainer) {
    Write-Host "`nüöÄ –ó–∞–ø—É—Å–∫ –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..." -ForegroundColor Cyan
    $containerCmd = "docker run --rm -d --name $ContainerName -e MCP_TRANSPORT=http -e MOUNT_HOST_ROOT=`"$ProjectPath`" -p 9090:9090 -p 8080:8080 -v `"$ProjectPath:/workspaces:ro`" mcp-bsl-server:latest"
    
    try {
        Invoke-Expression $containerCmd
        Write-Host "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω: $ContainerName" -ForegroundColor Green
        Write-Host "   –ö–æ–º–∞–Ω–¥–∞: $containerCmd" -ForegroundColor White
    } catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞" -ForegroundColor Red
        exit 1
    }
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    Write-Host "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (10 —Å–µ–∫)..." -ForegroundColor Yellow
    Start-Sleep -Seconds 10
} else {
    Write-Host "`n‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫ –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞" -ForegroundColor Yellow
}

# –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
Write-Host "`nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..." -ForegroundColor Cyan
try {
    $containerStatus = docker ps --filter "name=$ContainerName" --format "{{.Names}}"
    if ($containerStatus) {
        Write-Host "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω: $containerStatus" -ForegroundColor Green
    } else {
        Write-Host "‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω!" -ForegroundColor Red
        exit 1
    }
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞" -ForegroundColor Red
    exit 1
}

# –®–∞–≥ 5: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ MCP endpoints
Write-Host "`nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ MCP endpoints..." -ForegroundColor Cyan

# –¢–µ—Å—Ç Web UI
try {
    $webResponse = Invoke-WebRequest -Uri "http://localhost:9090" -UseBasicParsing -TimeoutSec 5
    if ($webResponse.StatusCode -eq 200) {
        Write-Host "‚úÖ Web UI –¥–æ—Å—Ç—É–ø–µ–Ω: http://localhost:9090" -ForegroundColor Green
    }
} catch {
    Write-Host "‚ùå Web UI –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω" -ForegroundColor Red
}

# –¢–µ—Å—Ç MCP Initialize
try {
    $initBody = '{"jsonrpc":"2.0","id":1,"method":"initialize","params":{"protocolVersion":"2024-11-05","capabilities":{"tools":{}}}}'
    $initResponse = Invoke-WebRequest -Uri "http://localhost:9090/mcp" -Method POST -Body $initBody -ContentType "application/json" -UseBasicParsing -TimeoutSec 5
    if ($initResponse.StatusCode -eq 200) {
        Write-Host "‚úÖ MCP Initialize —Ä–∞–±–æ—Ç–∞–µ—Ç" -ForegroundColor Green
    }
} catch {
    Write-Host "‚ùå MCP Initialize –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç" -ForegroundColor Red
}

# –¢–µ—Å—Ç MCP Tools List
try {
    $toolsBody = '{"jsonrpc":"2.0","id":2,"method":"tools/list","params":{}}'
    $toolsResponse = Invoke-WebRequest -Uri "http://localhost:9090/mcp" -Method POST -Body $toolsBody -ContentType "application/json" -UseBasicParsing -TimeoutSec 5
    if ($toolsResponse.StatusCode -eq 200) {
        $toolsResult = $toolsResponse.Content | ConvertFrom-Json
        $toolsCount = $toolsResult.result.tools.Count
        Write-Host "‚úÖ MCP Tools List —Ä–∞–±–æ—Ç–∞–µ—Ç ($toolsCount –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤)" -ForegroundColor Green
    }
} catch {
    Write-Host "‚ùå MCP Tools List –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç" -ForegroundColor Red
}

# –®–∞–≥ 6: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Cursor
if (-not $SkipConfig) {
    Write-Host "`nüìù –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Cursor..." -ForegroundColor Cyan
    
    $cursorConfigPath = "$env:APPDATA\Cursor\User\globalStorage\saoudrizwan.claude-dev\settings\cline_mcp_settings.json"
    $configDir = Split-Path $cursorConfigPath -Parent
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if (-not (Test-Path $configDir)) {
        New-Item -ItemType Directory -Path $configDir -Force | Out-Null
        Write-Host "‚úÖ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: $configDir" -ForegroundColor Green
    }
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    $config = @{
        "`$schema" = "https://modelcontextprotocol.io/schema/mcp-config.json"
        mcpServers = @{
            "bsl-mcp-stdio" = @{
                description = "üéØ MCP stdio —Ä–µ–∂–∏–º –¥–ª—è Cursor IDE"
                command = "docker"
                args = @("exec", "-i", $ContainerName, "java", "-jar", "/app/app.jar")
                env = @{
                    MCP_TRANSPORT = "stdio"
                    MOUNT_HOST_ROOT = $ProjectPath
                    LOGGING_ENABLED = "false"
                }
                disabled = $false
                alwaysAllow = @(
                    "bslcheck_analyze",
                    "bslcheck_format", 
                    "bslcheck_session_start",
                    "bslcheck_session_status",
                    "bslcheck_session_stop"
                )
            }
        }
    }
    
    try {
        $config | ConvertTo-Json -Depth 10 | Set-Content -Path $cursorConfigPath -Encoding UTF8
        Write-Host "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Cursor —Å–æ–∑–¥–∞–Ω–∞: $cursorConfigPath" -ForegroundColor Green
    } catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Cursor" -ForegroundColor Red
        Write-Host "   –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª –≤—Ä—É—á–Ω—É—é: $cursorConfigPath" -ForegroundColor Yellow
    }
} else {
    Write-Host "`n‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Cursor" -ForegroundColor Yellow
}

# –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
Write-Host "`nüéâ –ù–ê–°–¢–†–û–ô–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!" -ForegroundColor Green
Write-Host "================================================" -ForegroundColor Green

Write-Host "`nüìã –†–ï–ó–£–õ–¨–¢–ê–¢–´:" -ForegroundColor Yellow
Write-Host "‚úÖ Docker –æ–±—Ä–∞–∑ —Å–æ–±—Ä–∞–Ω" -ForegroundColor Green
Write-Host "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω: $ContainerName" -ForegroundColor Green
Write-Host "‚úÖ MCP —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç" -ForegroundColor Green
Write-Host "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Cursor —Å–æ–∑–¥–∞–Ω–∞" -ForegroundColor Green

Write-Host "`nüåê –î–û–°–¢–£–ü–ù–´–ï URL:" -ForegroundColor Yellow
Write-Host "‚Ä¢ Web UI: http://localhost:9090" -ForegroundColor White
Write-Host "‚Ä¢ Swagger UI: http://localhost:9090/swagger-ui" -ForegroundColor White
Write-Host "‚Ä¢ MCP Endpoint: http://localhost:9090/mcp" -ForegroundColor White

Write-Host "`nüîß –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:" -ForegroundColor Yellow
Write-Host "1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Cursor IDE" -ForegroundColor White
Write-Host "2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MCP —Å–µ—Ä–≤–µ—Ä—É" -ForegroundColor White
Write-Host "3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤–∏–¥–∏—Ç–µ 5 –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ BSL" -ForegroundColor White

Write-Host "`nüìû –ü–û–î–î–ï–†–ñ–ö–ê:" -ForegroundColor Yellow
Write-Host "‚Ä¢ –õ–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞: docker logs $ContainerName" -ForegroundColor White
Write-Host "‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∫–∞: docker stop $ContainerName" -ForegroundColor White
Write-Host "‚Ä¢ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: .\setup-cursor-mcp.ps1" -ForegroundColor White

Write-Host "`nüéØ MCP BSL Server –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –≤ Cursor IDE!" -ForegroundColor Green
